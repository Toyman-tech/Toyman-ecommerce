{"version":3,"file":"static/js/454.545ee190.chunk.js","mappings":"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","sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx"],"sourcesContent":["import React from \"react\";\r\nimport './checkout-item.styles.scss';\r\nimport {connect} from 'react-redux';\r\nimport { clearItemFromCart, addItem, removeItem } from \"../../redux/cart/cart.action\";\r\nconst CheckoutItem = ({cartItem, clearItem, addItem, removeItem})=>\r\n{\r\n const {name, imageUrl, price, quantity} = cartItem;\r\nreturn  (\r\n <div className=\"checkout-item\">\r\n     <div   className=\"image-container\">\r\n        <img alt='item' src={imageUrl}  />\r\n     </div>\r\n    <span className=\"name\">{name}</span>\r\n    <span className=\"quantity\">\r\n    <div className=\"arrow\" onClick={()=>removeItem(cartItem)} >&#10094;</div>\r\n      <span className=\"value\">{quantity}</span>  \r\n    <div className=\"arrow\" onClick={()=> addItem(cartItem)} >&#10095;</div>\r\n     </span>\r\n    <span className=\"price\"> ${price}\r\n    </span>\r\n    <div className=\"remove-button\" onClick={()=> clearItem(cartItem)} >&#10005;</div>\r\n </div>\r\n)};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearItem: (item) => {\r\n            dispatch(clearItemFromCart(item))\r\n        },\r\n        addItem: item=> {dispatch(addItem(item))\r\n        },\r\n        removeItem: item => {\r\n            dispatch(removeItem(item))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckoutItem)","import React from \"react\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst handleSuccess=()=>{\r\n    MySwal.fire({\r\n     icon:'success',\r\n     title:'Payment was succesful',\r\n     confirmButtonText: 'Cool'  \r\n    });\r\n}\r\n\r\nconst handleError =()=>{\r\n    MySwal.fire({\r\n     icon:'error',\r\n     title:'Invalid payment, please ensure you use the provided card details ',\r\n     confirmButtonText: 'Oh Okay' \r\n    });\r\n}\r\n\r\n\r\nconst StripeCheckoutButton = ({price}) => {\r\n    const priceForStripe = price * 1000;\r\n    const publishablekey = 'pk_test_51MkabaKMI64olOgIfSzkqlSbBnZmAUsX8JtH4RqFMUlFZOdnzCfDtISUGTbo85jaBwSLFtugBQj51j2fMUyJPOVS00HDBovth7';\r\n    const onToken =  async token => {\r\n        axios({\r\n            url: 'payment',\r\n            method: 'post',\r\n            data: {\r\n                amount: priceForStripe,\r\n                token\r\n            }\r\n        }).then(response=>{\r\n            if(response.status===200){\r\n               handleSuccess();\r\n            };\r\n        }).catch(error=> {\r\n        handleError();\r\n    });\r\n       \r\n    }\r\n\r\n    return(\r\n     <StripeCheckout\r\n      label = 'Pay Now'\r\n      name=\"Toyin Clothing Ltd.\"\r\n      billingAddress\r\n      shippingAddress\r\n      image=\"https://svgshare.com/i/CUz.svg\"\r\n      description= {`Your total is ${price}`}\r\n      amount = {priceForStripe}\r\n      panelLabel ='Pay Now'\r\n      token={onToken}\r\n      stripeKey ={publishablekey}\r\n      />\r\n    )\r\n} ;\r\n\r\nexport default StripeCheckoutButton;","import React from \"react\";\r\nimport './checkout.styles.scss'\r\nimport {connect} from 'react-redux';\r\nimport {createStructuredSelector} from 'reselect';\r\n\r\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\r\nimport { selectCartTotal } from \"../../redux/cart/cart.selectors\";\r\nimport CheckoutItem from \"../../components/checkout-item/checkout-item.component\";\r\nimport StripeCheckoutButton from \"../../components/stripe-button/stripe-button.component\";\r\n\r\n\r\n\r\nconst CheckoutPage = ({CartItems, total})=> (\r\n<div className=\"checkout-page\">\r\n    <div className=\"checkout-header\">\r\n        <div className=\"header-block\">\r\n            <span>Product</span>\r\n        </div>\r\n       <div className=\"header-block\">\r\n            <span>Description</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n            <span>Quantity</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n            <span>price</span>\r\n        </div>\r\n        <div className=\"header-block\">\r\n            <span>Remove</span>\r\n        </div>\r\n    </div>   \r\n    {\r\n        CartItems.map(cartItem=> <CheckoutItem  key={cartItem.id} cartItem={cartItem} />\r\n        )}\r\n    <div className=\"total\">\r\n       <span>TOTAL: ${total}</span>    \r\n    </div> \r\n    <div className=\"test-warning\">\r\n        *Please use the following test credit card for payments* \r\n        <br/>\r\n        4242 4242 4242 4242 - Exp: 01/32 - CVV:123\r\n    </div>\r\n    <StripeCheckoutButton price={total} />\r\n</div>\r\n);\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    CartItems : selectCartItems,\r\n    total : selectCartTotal\r\n});\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage);"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","_ref","cartItem","name","imageUrl","price","quantity","_jsxs","className","children","_jsx","alt","src","onClick","MySwal","withReactContent","Swal","priceForStripe","onToken","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","wrap","_context","prev","next","axios","url","method","data","amount","then","response","status","fire","icon","title","confirmButtonText","catch","error","stop","_x","apply","arguments","StripeCheckout","label","billingAddress","shippingAddress","image","description","concat","panelLabel","stripeKey","mapStateToProps","createStructuredSelector","CartItems","selectCartItems","total","selectCartTotal","map","CheckoutItem","id","StripeCheckoutButton"],"sourceRoot":""}