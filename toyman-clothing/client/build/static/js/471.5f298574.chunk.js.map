{"version":3,"file":"static/js/471.5f298574.chunk.js","mappings":"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","sources":["components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.component.jsx","components/preview-collection/prevew-collection.components.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx","pages/collection/collection.component.jsx","pages/collection/collection.container.jsx","pages/shop/shop.components.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\n const withSpinner = WrapppedComponent => ({ isLoading, ...otherProps})=>{\r\n    return isLoading? <Spinner/> : <WrapppedComponent {...otherProps} />\r\n };\r\n export default withSpinner;","import React from \"react\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport \"./collection-item.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addItem } from \"../../redux/cart/cart.action\";\r\n\r\nconst CollectionItem = ({item,  addItem}) => {\r\n\r\n const { name, price, imageUrl}=item;\r\n\r\n    return(\r\n    <div className=\"collection-item\">\r\n        <div className=\"image\"\r\n        style={{backgroundImage:`url(${imageUrl})`}}/>\r\n        <div className=\"collection-footer\"> \r\n         <span className=\"name\">{name}</span>\r\n         <span className=\"price\">${price}\r\n         </span>\r\n        </div>\r\n        <CustomButton onClick={()=> addItem(item)}  inverted className='custom-button'>Add to Cart</CustomButton>\r\n  </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addItem: (item) => {\r\n            dispatch(addItem(item))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CollectionItem);      "," import React from \"react\";\r\n\r\nimport CollectionItem from \"../collection-item/collection-item.component\";\r\nimport './preview-collection.styles.scss'\r\n\r\nconst  CollectionPreview =({ title, items})=>{\r\n    return(\r\n    <div    className=\"collection-preview\">\r\n       <h1 className=\"tittle\">\r\n          {title.toUpperCase()}\r\n        </h1>\r\n     <div className=\"preview\">\r\n        {\r\n            items\r\n            .filter((item, idx)=> idx < 4 )\r\n            .map((item )=>(\r\n                <CollectionItem key={item.id} item={item} />\r\n            ))\r\n        }\r\n        \r\n     </div>\r\n    </div>\r\n    );\r\n\r\n    }\r\n\r\nexport default CollectionPreview;","import React from \"react\";\r\nimport './collections-overview.styles.scss'\r\nimport { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport CollectionPreview from \"../preview-collection/prevew-collection.components\";\r\nimport { selectCollectionsForPreview } from \"../../redux/shop/shop.selectors\";\r\n\r\nconst CollectionsOverview =({collections})=>(\r\n    <div   className=\"collections-overview\">\r\n    {\r\n        collections.map(({ id, ...otherCollectionProps} )=>(\r\n      <CollectionPreview key={id} {...otherCollectionProps}/> ))\r\n    }\r\n    </div>\r\n);\r\n  \r\n const mapStateToProps = createStructuredSelector({\r\n    collections: selectCollectionsForPreview\r\n })\r\n\r\n\r\nexport default connect(mapStateToProps)(CollectionsOverview);\r\n\r\n\r\n","import { connect } from \"react-redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\r\nimport withSpinner from \"../with-spinner/with-spinner.component\";\r\nimport CollectionsOverview from \"./collections-overview.component\";\r\nimport {compose} from 'redux'\r\nconst mapStateToProps = createStructuredSelector ( {\r\n        isLoading: selectIsCollectionFetching\r\n});\r\n\r\n const CollectionsOverviewContainer = compose(connect(mapStateToProps),\r\nwithSpinner\r\n)(CollectionsOverview);\r\n\r\nexport default CollectionsOverviewContainer;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\r\nimport './collection.styles.scss';\r\nimport CollectionItem from \"../../components/collection-item/collection-item.component\";\r\n\r\nconst CollectionPage = ( {collections})=> { \r\n\r\n    const {title, items} = collections;\r\n     console.log(collections);\r\n     console.log(title, items);    \r\n     return(\r\n    <div className=\"collection-page\">\r\n        <h2 className=\"title\"> {title}</h2>\r\n     <div className=\"items\">\r\n       { items.map(item =>  (<CollectionItem key={item.id} item={item} />))\r\n       }\r\n     </div>\r\n    </div>\r\n)};\r\n \r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n   collections: \r\n    selectCollection(ownProps.collectionId)(state)\r\n\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(CollectionPage);","import { connect } from \"react-redux\";\r\nimport {compose} from 'redux';\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\r\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\r\nimport CollectionPage from './collection.component'\r\n\r\n\r\nconst mapStateToProps= createStructuredSelector({\r\n    isLoading : state=> !selectIsCollectionsLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n   connect(mapStateToProps),\r\n   withSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;","import React from \"react\";\r\nimport { Route, Routes, useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container\";\r\nimport CollectionPageContainer from \"../collection/collection.container\";\r\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst ShopPage=({ fetchCollectionsStart})=>\r\n{\r\n  useEffect(() => {\r\n  fetchCollectionsStart()\r\n  }, [fetchCollectionsStart])\r\n//  const {pathname} = useLocation();\r\n  const collect=useParams();\r\n  const collectionId = collect['*']\r\n  \r\n  console.log(collectionId);\r\n return (\r\n  <div className=\"shop-page\">\r\n     <Routes>\r\n     <Route  exact path='/' element={<CollectionsOverviewContainer/>} />\r\n      \r\n     <Route path=':collectionId'  element={<CollectionPageContainer collectionId={collectionId} />}    />\r\n        </Routes>\r\n  </div>\r\n)};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCollectionsStart : () => {\r\n      dispatch(fetchCollectionsStart())\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"],"names":["WrapppedComponent","_ref","isLoading","otherProps","_objectWithoutProperties","_excluded","_jsx","Spinner","_objectSpread","connect","dispatch","addItem","item","name","price","imageUrl","_jsxs","className","children","style","backgroundImage","concat","CustomButton","onClick","inverted","title","items","toUpperCase","filter","idx","map","CollectionItem","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","_ref2","otherCollectionProps","CollectionPreview","selectIsCollectionFetching","compose","withSpinner","CollectionsOverview","state","ownProps","selectCollection","collectionId","console","log","selectIsCollectionsLoaded","CollectionPage","fetchCollectionsStart","useEffect","useParams","Routes","Route","exact","path","element","CollectionsOverviewContainer","CollectionPageContainer"],"sourceRoot":""}